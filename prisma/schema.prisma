// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String   @id @default(uuid())
  clerkUserId  String   @unique
  name         String?
  email        String   @unique
  imageURL     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  orders       Order[]
  shoppingCart Cart?
  Review       Review[]
}

model Cart {
  id         String     @id @default(uuid())
  customerId String     @unique
  customer   Customer   @relation(fields: [customerId], references: [id])
  items      CartItem[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
}

model Order {
  id         String      @id @default(uuid())
  customerId String
  customer   Customer    @relation(fields: [customerId], references: [id])
  total      Float
  status     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       Float
  description String
  imageURL    String
  sku         String      @unique
  stock       Int
  company     String
  orderItems  OrderItem[]
  CartItem    CartItem[]
  categoryId  Int
  category    Category    @relation(fields: [categoryId], references: [id])
  reviews     Review[]
}

model CartItem {
  id             String   @id @default(uuid())
  shoppingCartId String
  shoppingCart   Cart     @relation(fields: [shoppingCartId], references: [id])
  productId      String
  product        Product  @relation(fields: [productId], references: [id])
  quantity       Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  products    Product[]
}

model Review {
  id            Int       @id @default(autoincrement())
  rating        Int       @default(0)
  comment       String
  userName      String
  userAvatarURL String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  productId     String
  product       Product   @relation(fields: [productId], references: [id])
  Customer      Customer? @relation(fields: [customerId], references: [id])
  customerId    String?
}
